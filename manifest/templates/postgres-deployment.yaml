apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --chart --controller=deployment -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --chart --controller=deployment -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/vault: "true"
        io.kompose.service: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: prvd
        - name: POSTGRES_PASSWORD
          value: prvdp455
        - name: POSTGRES_USER
          value: prvd
        - name: POSTGRES_DB
          value: prvd
        - name: POSTGRES_USER
          value: prvd
        - name: POSTGRES_PASSWORD
          value: prvdp455
        - name: PATH
          value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin
        - name: GOSU_VERSION
          value: "1.14"
        - name: LANG
          value: en_US.utf8
        - name: PG_MAJOR
          value: "14"
        - name: PG_VERSION
          value: 14.3-1.pgdg110+1
        - name: PGDATA
          value: /var/lib/postgresql/dat
        image: postgres
        imagePullPolicy: ""
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - prvd
            - -d
            - prvd
          failureThreshold: 2
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 1
        name: postgres
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-db
      hostname: postgres
      restartPolicy: Always
      serviceAccountName: provide
      volumes:
      - name: postgres-db
        persistentVolumeClaim:
          claimName: postgres-db
status: {}
